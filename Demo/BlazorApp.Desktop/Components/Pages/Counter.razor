@page "/counter"

@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage ProtectedLocalStore


<h1>Counter</h1>


@if (isConnected)
{
    <p>Current count: <strong>@currentCount</strong> using ProtectedBrowserStorage for testing purpose!</p>
    <button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
}
else
{
    <p>Loading...</p>
}



@code {
    private int currentCount;
    private bool isConnected;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Task.Delay(500);
            isConnected = true;
            await LoadStateAsync();
            StateHasChanged();
        }
    }

    private async Task LoadStateAsync()
    {
        var result = await ProtectedLocalStore.GetAsync<int>("count");
        currentCount = result.Success ? result.Value : 0;
    }

    private async Task IncrementCount()
    {
        currentCount++;
        await ProtectedLocalStore.SetAsync("count", currentCount);
    }
}